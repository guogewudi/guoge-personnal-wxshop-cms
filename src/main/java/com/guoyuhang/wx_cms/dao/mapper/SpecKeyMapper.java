package com.guoyuhang.wx_cms.dao.mapper;

import com.guoyuhang.wx_cms.dao.model.SpecKey;
import com.guoyuhang.wx_cms.dao.model.SpecKeyExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface SpecKeyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spec_key
     *
     * @mbg.generated
     */
    @SelectProvider(type= SpecKeySqlProvider.class, method="countByExample")
    long countByExample(SpecKeyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spec_key
     *
     * @mbg.generated
     */
    @DeleteProvider(type= SpecKeySqlProvider.class, method="deleteByExample")
    int deleteByExample(SpecKeyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spec_key
     *
     * @mbg.generated
     */
    @Delete({
        "delete from spec_key",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spec_key
     *
     * @mbg.generated
     */
    @Insert({
        "insert into spec_key (`name`, `unit`, ",
        "`standard`, `create_time`, ",
        "`update_time`, `delete_time`, ",
        "`description`)",
        "values (#{name,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, ",
        "#{standard,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{deleteTime,jdbcType=TIMESTAMP}, ",
        "#{description,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(SpecKey record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spec_key
     *
     * @mbg.generated
     */
    @InsertProvider(type= SpecKeySqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(SpecKey record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spec_key
     *
     * @mbg.generated
     */
    @SelectProvider(type= SpecKeySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="unit", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="standard", property="standard", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="delete_time", property="deleteTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    List<SpecKey> selectByExample(SpecKeyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spec_key
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "`id`, `name`, `unit`, `standard`, `create_time`, `update_time`, `delete_time`, ",
        "`description`",
        "from spec_key",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="unit", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="standard", property="standard", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="delete_time", property="deleteTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    SpecKey selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spec_key
     *
     * @mbg.generated
     */
    @UpdateProvider(type= SpecKeySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") SpecKey record, @Param("example") SpecKeyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spec_key
     *
     * @mbg.generated
     */
    @UpdateProvider(type= SpecKeySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") SpecKey record, @Param("example") SpecKeyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spec_key
     *
     * @mbg.generated
     */
    @UpdateProvider(type= SpecKeySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SpecKey record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spec_key
     *
     * @mbg.generated
     */
    @Update({
        "update spec_key",
        "set `name` = #{name,jdbcType=VARCHAR},",
          "`unit` = #{unit,jdbcType=VARCHAR},",
          "`standard` = #{standard,jdbcType=TINYINT},",
          "`create_time` = #{createTime,jdbcType=TIMESTAMP},",
          "`update_time` = #{updateTime,jdbcType=TIMESTAMP},",
          "`delete_time` = #{deleteTime,jdbcType=TIMESTAMP},",
          "`description` = #{description,jdbcType=VARCHAR}",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SpecKey record);
}