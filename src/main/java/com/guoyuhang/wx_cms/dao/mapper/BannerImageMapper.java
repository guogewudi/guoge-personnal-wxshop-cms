package com.guoyuhang.wx_cms.dao.mapper;

import com.guoyuhang.wx_cms.dao.model.BannerImage;
import com.guoyuhang.wx_cms.dao.model.BannerImageExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;
import org.springframework.web.bind.annotation.RequestParam;

@Repository
public interface BannerImageMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table banner_image
     *
     * @mbg.generated
     */
    @SelectProvider(type=BannerImageSqlProvider.class, method="countByExample")
    long countByExample(BannerImageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table banner_image
     *
     * @mbg.generated
     */
    @DeleteProvider(type=BannerImageSqlProvider.class, method="deleteByExample")
    int deleteByExample(BannerImageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table banner_image
     *
     * @mbg.generated
     */
    @Delete({
        "delete from banner_image",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table banner_image
     *
     * @mbg.generated
     */
    @Insert({
        "insert into banner_image (`banner_id`, `img`, ",
        "`keyword`, `type`, `name`)",
        "values (#{bannerId,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR}, ",
        "#{keyword,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(BannerImage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table banner_image
     *
     * @mbg.generated
     */
    @InsertProvider(type=BannerImageSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(BannerImage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table banner_image
     *
     * @mbg.generated
     */
    @SelectProvider(type=BannerImageSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="banner_id", property="bannerId", jdbcType=JdbcType.INTEGER),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="keyword", property="keyword", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR)
    })
    List<BannerImage> selectByExample(BannerImageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table banner_image
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "`id`, `banner_id`, `img`, `keyword`, `type`, `name`",
        "from banner_image",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="banner_id", property="bannerId", jdbcType=JdbcType.INTEGER),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="keyword", property="keyword", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR)
    })
    BannerImage selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table banner_image
     *
     * @mbg.generated
     */
    @UpdateProvider(type=BannerImageSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") BannerImage record, @Param("example") BannerImageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table banner_image
     *
     * @mbg.generated
     */
    @UpdateProvider(type=BannerImageSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") BannerImage record, @Param("example") BannerImageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table banner_image
     *
     * @mbg.generated
     */
    @UpdateProvider(type=BannerImageSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(BannerImage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table banner_image
     *
     * @mbg.generated
     */
    @Update({
        "update banner_image",
        "set `banner_id` = #{bannerId,jdbcType=INTEGER},",
          "`img` = #{img,jdbcType=VARCHAR},",
          "`keyword` = #{keyword,jdbcType=VARCHAR},",
          "`type` = #{type,jdbcType=INTEGER},",
          "`name` = #{name,jdbcType=VARCHAR}",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(BannerImage record);

    List<BannerImage> findAll();

    Integer insertOne(BannerImage bannerImage);
}